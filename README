README for Seq66 0.90.3 (Sequencer64 refactored for C++/14 and Qt 5)
Chris Ahlstrom
2015-09-10 to 2020-07-03

I have put a lot of work into this new version, but there are
still things to do and bugs to fix.  For now, if you have a specific request,
email me at ahlstromcj@gmail.com.

Seq66 is a refactoring of Sequencer64 for better use of C++ and for removing a
lot of krufty buildup.  Major changes:

    -   User interface:
        -   Removed the Gtkmm implementations, now using only Qt 5 since its
            cross-platform support seems more complete.  Also removed the
            "grid of sets" feature in favor of unlimited external grid
            windows.
        -   Added tabs for management of sets, mute-groups, Song mode, pattern
            editing, event-editing, and play-lists.
        -   Added a live frame using buttons to match Qt theming. The original
            implementation is available as a "user" option.
        -   Cleanup of unused Gtkmm-to-Qt code.
        -   A color for each sequence can be chosen to make it more
            distinguishable.  The default NONE (white) that is not stored in
            the track.  Otherwise, the color is saved in a SeqSpec associated
            with the track.
    -   Configuration files:
        -   Unified keystroke control and MIDI control into a ".ctrl" file.
            Specifies MIDI In controls for controlling Seq66 remotely, and MIDI
            Out controls for displaying Seq66 status in grid controllers (e.g.
            LaunchPad).
        -   Separated MIDI control and mute-group setting into their own files,
            with support for hex notation.
        -   Supported configuration files: "*.rc", "*.usr", "*.ctrl", "*.mutes",
            and "*.playlist".
    -   Internal:
        -   More consistent use of modern C++, including lambda functions.
        -   Additional performer callbacks to reduce the need for polling in the
            user-interface.  Still in progress.
    -   Non Session Manager.  Working on support for this manager, there is a
        lot of investigation to do.

Seq66 has builds for ALSA/JACK, PortMidi, Windows, and a command-line/daemon.

ALSA/JACK support: Seq66qt5/qseq66
GUI-less application: Seq66cli/seq66cli [not yet!]
Qt/Windows/PortMidi: Seq66qt5/qpseq66.exe [not yet!]
Qt/RtMidi: Seq66qt5/qrseq66

Seq66 uses a Qt 5 user-interface based on Kepler34 and the Seq66 "portmidi"
engine (for Windows).  Windows MIDI devices are detected, inaccessible devices
are ignored, and playback (e.g. to the Windows wavetable synthesizer) work. It
is built easily via Qt Creator or qmake, using MingW.  The Qt 5 GUI is the only
official GUI of Seq66.

See the INSTALL file for build-from-source instructions for Linux or Windows,
and using a conventional source tarball.

Recent changes:

    -   Version 0.90.3:
        -   Added signal handling (e.g. for nsm-proxy) from user falkTX.
            Used in the CLI and Qt versions to trigger file save and
            application exit.
        -   Added code to define the engine used and the exact "uname a-" of the
            operating system on which the build was done, for the --version
            option.
        -   Fixed issue #5 to save/restore note-on resumes and get them
            working in Live mode and Song mode.
        -   Fixed issues with perfoll and grid-button rendering, synch between
            button and seqedit mute status, growing notes in the seqroll, and
            more.
        -   Added writing of blank [midi-control-out] section.
        -   Fixed flickering when muting/unmuting patterns via keystrokes.
    -   Version 0.90.2:
        -   Lots of code cleanup.
        -   Added truncation of BPM to precision in "usr" file.
        -   Fixed at bug in handling running status; backported to Seq64.
    -   Version 0.90.1:
        -   A raft of bug fixes and user-interface improvements.
        -   Many tweaks to try to make the performer and the user-interface even
            faster.
    -   Version 0.90.0:
        -   The application and documentation are now (barely) suitable for
            public consumption, after residing on a server (a Toshiba laptop) at
            home for months.

This package is oriented to developers and users who do not mind building from
source, with a little help.

# vim: sw=4 ts=4 wm=4 et ft=sh
