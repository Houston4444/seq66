TODO for Seq66 0.90.5 (Sequencer64 refactored for C++14 and Qt)
Chris Ahlstrom
2019-04-13 to 2020-07-18

HOT ITEMS:

	From: zigmhount <notifications@github.com>
	Subject: [Question/Feature request] Live midi pattern recording (#188)

    I havve followed closely the development of the midi control output to use
    with my Akai APC Mini - awesome. The only think I miss now is to easily
    record a midi pattern in an empty slot without too much fiddling with the
    mouse or keyboard, as in a live setup.

    My ideal feature would be e.g.

    1. when an empty pattern is selected (on the control surface)
    2. to automatically open the pattern editor
    3. automatically activate Dump Data to MIDI Bus
    4. automatically activate Midi pass-through
    5. automatically activate Record Midi data
    6. automatically set Merge to Expand the sequence to fit recording
    7. and manually select the midi output to the synth.

	How easy/difficult would it be to implement keyboard or midi shortcuts to
	these buttons (steps 2 to 6), or preset them for every new pattern editor?

ISSUES:

    #1: JACK Metadata MIDINAM support.  LV2 MIDNAM has been around for a
    while. There has been discussion on #lad, and, now JACK 2 has metadata
    implemented, Carla has started offering that MIDNAM information as
    metadata on the midi-in port for a connecting sequencer to use.
    STATUS: Not yet started.

    #2: Failed to find matching components of a complete QT installation.
    User: Make sure that dev versions of all the Qt libraries mentioned in
    the DEPENDENCIES/ Qt Builds section of the INSTALL file are installed.
    STATUS: Updated the INSTALL documentation.

    #3: Open loop Pattern Editor window. On mouse wheel scroll event we expect
    the piano-roll and notes sheet to scroll vertically.
    STATUS: We had to disable mouse-wheel scrolling for some reason, so still
    investigating that one.

    #7: 'make install' doesn't install files.
    STATUS: This is an Arch packaging issue.  Will investigate at some point.

    #8: NSM Support? Similar to ahlstromcj/sequencer64#1 but now there is an
    NSM fork, https://github.com/linuxaudio/new-session-manager.
    STATUS: Initial framework to support restarting the performer module with
    a new configuration is in place.  Will add the appropriate code to the
    qt5nsmanager.  Will investigate the implications of the "new" session
    manager.

    #9: Change pattern in the Edit tab while on the Edit tab? I do not think I
    can see anything currently.
    STATUS:  In progress.  Fixing issues missed in the Edit tab.  Note that
    the Edit tab will never have all the features of the external pattern
    editor. There is just not enough room, for one thing.

    #10: Right click-hold on pattern editor doesn't show draw pencil.
    STATUS: Qt does not have a pencil icon, so a pointing finger appears
    instead.  To activate the pointing finger, do a right-hold. To then
    add a note, while holding the right button, click the left button.
    Using the "p" key to enable note-entry might be easier on the hands.
    Use the "x" key to exit note entry.

    #11: Pattern editor: disabling the 'piano roll scrolls with playback'
    button does not stop the scrolling.
    STATUS: Will do.

    #12: Note rendering problem. Having a long note, scrolling it out of
    vision and back again leads to a problem.  (Only the first snap division
    and last snap division of the note appears.
    STATUS:  Weird, will do.

    #13: Pattern editor: control event bar doesn't update/scroll. If I add or
    remove a note, the related representation in the control bar below the
    piano roll does not refresh. Also, if I scroll the view above, the control
    bar stays in the same place.
    STATUS:  In progress.  Related to issue #9.  Cannot duplicate the issue
    with the control bar staying in the same place.  I found so far that the
    event (trigger) bar and data (control) bar were not showing events due to
    an error I made in setting the status/cc values each were to show.

PATTERNS:

    -   Support a non-channel pattern (e.g. to contain patch info).
    -   Set pattern editor focus to grid at start unless it is a new one.
    -   Make it center on notes if not visible.
    -   Still some weird note events in 2rock, above measure 20, when scrolling
        via the scrollbar; okay when clicking the scrollbar. Fine when scrolling
        during playback.
    -   Make sure Esc/Space work in pattern editor.  Consider adding the
        start/stop buttons.
    -   When loading 2rock pattern 10(1) into the editor, adjust the length
        dropdown to match!

Tons of TODOs in performer!

    Do:

        -   After importing to a set, reload that set to make changes visible.
        -   In qseqroll, replace reset_draw_marker().
        -   In qsmainwnd, implement and unhide the PPQN combo box, and save the
            setting.
        -   Implement setmapper::select_triggers_in_range().
        -   Implement screenset::select_triggers_in_range().
        -   Investigate sequence::offset_triggers() usage.

    Load a song with Song triggers; go to the song tab; select File/New. Note
    that the perfroll clears, but not the perfnames!  We need to derive all
    qperf GUIs from qperfbase.  Actually, they both clear, only if clicked on.

    When copying a large track and pasting into a smaller one, consider altering
    the length of the smaller track to match.

List of To-Do Items for the Refactoring.  An asterisk means it should also be
fixed in Seq64.

seq_portmidi/src/finddefault.c *:

    Eliminate find_default_device().  We do not want to use Java user preferences
    for configuration information.

seq_portmidi/src/pmwinmm.c *:
seq_portmidi/src/pmmacosxcm.c *:

    Figure out the proper client and port values for calls to pm_add_device().

seq_portmidi/src/mastermidibus.cpp *:

    Implement api_set_ppqn().
    Implement api_set_beats_per_minute().
    Declare and Implement api_flush().
    Declare and Implement api_start().
    Declare and Implement api_stop().
    Declare and Implement api_continue_from().
    Declare and Implement api_port_start().

seq_rtmidi/src/midi_alsa_info.cpp *:

    In api_get_midi_event(), implement support for:

        SND_SEQ_EVENT_PORT_START.
        SND_SEQ_EVENT_PORT_EXIT.
        SND_SEQ_EVENT_PORT_CHANGE (could be difficult).

Seq66qt5/seq66qt5.cpp *:

    Implement gui_palette_qt5::load_inverse_palette().

Seqtool/src/optionsfile.cpp (a low priority):

    parse():  Investigate and fix all the TODOs.

Seqtool/src/optionsfile.cpp (a low priority):

    Investigate and fix all the TODOs.

seq_qt5/src/qseqkeys.cpp:

    paintEvent():

seq_qt5/src/qseventslots.cpp:

    delete_current_event(): set modify flag

seq_qt5/src/qlfoframe.cpp:

    on_focus_out_event():  Implement undo of calculations.

seq_qt5/src/qseqbase.cpp:

    set_scroll_y(): Use m_unit_height.

seq_qt5/src/qseqbase.cpp:

    mouseReleaseEvent():  Implement undirtying when undoing.

seq_qt5/src/qsliveframe.cpp:

    new_seq(): handle reenable/disable of the editor for each new sequence.
    cut_seq(): add the warning dialog.
    delete_seq(): add the warning dialog.

seq_qt5/src/qperfroll.cpp:

    Investigate the note at the top about passing values to constructors.
    paintEvent(): handle DRAW_TEMPO

seq_qt5/src/gui_palette_qt5.cpp:

    get_color_inverse(): return black for NONE color.

seq_qt5/src/qseqroll.cpp:

    keyPressEvent():  Fix the zoom keys.

seq_qt5/src/qsmainwnd.cpp:

    Constructor:  Fix and unhide the PPQN combo-box.

seq_qt5/src/qsliveframe.cpp:

    While running, try to avoid drawing the empty slots over and over.

libseq66/src/play/setmapper.cpp:

    Implement select_triggers_in_range().

libseq66/src/play/sequence.cpp:

    Investigate and fix offset_triggers().

libseq66/src/play/performer.cpp:

    Implement solo, FF, rewind, and many more.  Investigate!!!

    Implement error handling in various places.

    put_settings(): Implement the to-do.
    mute_group_control(): Implement it, a HIGH PRIORITY!

libseq66/src/play/screenset.cpp:

    Implement select_triggers_in_range().

libseq66/src/midi/jack_assistant.cpp:

    session_event():  Implement the quit functionality.
    jack_session_callback():  Implement the quit functionality.

libseq66/src/midi/editable_event.cpp:

    set_status_from_string(): Implement the to-do functionality.

libseq66/src/midi/wrkfile.cpp:

    Implement the to-dos.

libseq66/src/midi/midifile.cpp:

    Implement the to-dos.  A HIGH PRIORITY.

libseq66/src/cfg/mutegroupsfile.cpp:

    Implement the to-dos?

libseq66/src/cfg/usrsettings.cpp:

    normalize(): Fix the calculation of the number of mute tracks.

Many modules:

    In general, support run-time changes in PPQN, a big task.
    In general, support PPQN calculations other than "times 4", a big task.

Lots of testing as well!

# vim: sw=4 ts=4 wm=4 et ft=sh
